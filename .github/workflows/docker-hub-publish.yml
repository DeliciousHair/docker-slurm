name: Docker Build and Publish

on:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/docker-hub-publish.yml'
      - 'dockerfile**'
      - '.env'
    tags-ignore:
      - '**'
  schedule:
    - cron: '0 0 14,28 * *'
  workflow_dispatch:

jobs:
  setup:
    name: Build Environment Setup
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Repository Files
        uses: actions/checkout@v3

      - name: Load Environment Variables
        run: cat .env >> $GITHUB_ENV
    outputs:
      DOCKER_HUB_REPO: ${{ env.DOCKER_HUB_REPO }}
      TAG_BASE_STANDARD: ${{ env.TAG_BASE_STANDARD }}
      TAG_BASE_ROOT: ${{ env.TAG_BASE_ROOT }}
      TAG_FULL_STANDARD: ${{ env.TAG_FULL_STANDARD }}
      TAG_FULL_ROOT: ${{ env.TAG_FULL_ROOT }}
      CONTAINER_USERNAME: ${{ env.CONTAINER_USERNAME }}
      CONTAINER_PASSWORD: ${{ env.CONTAINER_PASSWORD }}
      CONTAINER_UID: ${{ env.CONTAINER_UID }}
      CONTAINER_GID: ${{ env.CONTAINER_GID }}
      CONTAINER_TIMEZONE: ${{ env.CONTAINER_TIMEZONE }}

  build-base:
    name: Docker Hub - base - ${{ matrix.user }}
    needs: setup
    if: ${{ success() }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        user: [standard]
        tag: ['${{ needs.setup.outputs.TAG_BASE_STANDARD }}']
        include:
          - user: root
            tag: ${{ needs.setup.outputs.TAG_BASE_ROOT }}
    steps:
      - name: Check Out Repository Files
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Build and Publish Docker Image
        uses: docker/build-push-action@v2
        with:
          context: ./dockerfile_base/
          push: true
          tags: ${{ needs.setup.outputs.DOCKER_HUB_REPO }}:${{ matrix.tag }}
          build-args: |
            BASE_DOCKER_REPO=${{ needs.setup.outputs.DOCKER_HUB_REPO }}
            BASE_TAG=${{ needs.setup.outputs.TAG_BASE_ROOT }}
            USERNAME=${{ needs.setup.outputs.CONTAINER_USERNAME }}
            PASSWORD=${{ needs.setup.outputs.CONTAINER_PASSWORD }}
            UID=${{ needs.setup.outputs.CONTAINER_UID }}
            GID=${{ needs.setup.outputs.CONTAINER_GID }}
            TIMEZONE=${{ needs.setup.outputs.CONTAINER_TIMEZONE }}
            USER_PRIVILEGE_LEVEL=${{ matrix.user }}

  build-full:
    name: Docker Hub - full - ${{ matrix.user }}
    needs: [setup, build-base]
    if: ${{ success() }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        user: [standard]
        tag: ['${{ needs.setup.outputs.TAG_FULL_STANDARD }}']
        include:
          - user: root
            tag: ${{ needs.setup.outputs.TAG_FULL_ROOT }}
    steps:
      - name: Check Out Repository Files
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Build and Publish Docker Image
        uses: docker/build-push-action@v2
        with:
          context: ./dockerfile_full/
          push: true
          tags: ${{ needs.setup.outputs.DOCKER_HUB_REPO }}:${{ matrix.tag }}
          build-args: |
            BASE_DOCKER_REPO=${{ needs.setup.outputs.DOCKER_HUB_REPO }}
            BASE_TAG=${{ needs.setup.outputs.TAG_BASE_ROOT }}
            USERNAME=${{ needs.setup.outputs.CONTAINER_USERNAME }}
            PASSWORD=${{ needs.setup.outputs.CONTAINER_PASSWORD }}
            UID=${{ needs.setup.outputs.CONTAINER_UID }}
            GID=${{ needs.setup.outputs.CONTAINER_GID }}
            TIMEZONE=${{ needs.setup.outputs.CONTAINER_TIMEZONE }}
            USER_PRIVILEGE_LEVEL=${{ matrix.user }}
